{"ast":null,"code":"\"use strict\";\n\nvar _jsxFileName = \"/drupal/app/next/pages/channel.js\";\nvar __jsx = React.createElement;\n\n/**\n * This is the page rendered when inside a chat room.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport { HashLoader } from 'react-spinners';\nimport App from 'grommet/components/App';\nimport ChatIcon from 'grommet/components/icons/base/Chat';\nimport RefreshIcon from 'grommet/components/icons/base/Refresh';\nimport AddCircleIcon from 'grommet/components/icons/base/Add';\nimport UserIcon from 'grommet/components/icons/base/User';\nimport LogoutIcon from 'grommet/components/icons/base/Logout';\nimport Split from 'grommet/components/Split';\nimport Sidebar from 'grommet/components/Sidebar';\nimport Header from 'grommet/components/Header';\nimport Footer from 'grommet/components/Footer';\nimport Title from 'grommet/components/Title';\nimport Box from 'grommet/components/Box';\nimport Menu from 'grommet/components/Menu';\nimport Anchor from 'grommet/components/Anchor';\nimport Button from 'grommet/components/Button';\nimport Paragraph from 'grommet/components/Paragraph';\nimport Label from 'grommet/components/Label';\nimport bootstrap from \"../src/lib/bootstrap\";\nimport TextInput from \"../src/modules/form/components/TextInput\";\nconst StyledRoomHeader = styled(Header).withConfig({\n  displayName: \"channel__StyledRoomHeader\",\n  componentId: \"sc-1g5qepo-0\"\n})([\"border-bottom:1px solid #ddd;\"]);\nconst StyledMessage = styled(Paragraph).withConfig({\n  displayName: \"channel__StyledMessage\",\n  componentId: \"sc-1g5qepo-1\"\n})([\"margin:0;\"]);\nconst StyledAuthor = styled(Label).withConfig({\n  displayName: \"channel__StyledAuthor\",\n  componentId: \"sc-1g5qepo-2\"\n})([\"margin:0;\"]);\nconst StyledTextInput = styled(TextInput).withConfig({\n  displayName: \"channel__StyledTextInput\",\n  componentId: \"sc-1g5qepo-3\"\n})([\"width:100%;\"]);\nconst AddChannelButton = styled(Button).withConfig({\n  displayName: \"channel__AddChannelButton\",\n  componentId: \"sc-1g5qepo-4\"\n})([\"margin-left:auto;\"]);\n\nconst LoadingComponent = () => __jsx(Box, {\n  full: \"vertical\",\n  justify: \"center\",\n  align: \"center\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, __jsx(HashLoader, {\n  color: \"#e02438\",\n  loading: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}));\n\nimport CurrentUserContainer from \"../src/modules/auth/containers/CurrentUserContainer\";\nimport ChannelsContainer from \"../src/modules/channel/containers/ChannelsContainer\";\nimport MessagesContainer from \"../src/modules/channel/containers/MessagesContainer\";\nimport NewMessageContainer from \"../src/modules/channel/containers/NewMessageContainer\";\nimport NewChannelContainer from \"../src/modules/channel/containers/NewChannelContainer\";\n\nconst ChatRoom = ({\n  url,\n  url: {\n    query: {\n      channel = 'general'\n    }\n  }\n}) => __jsx(CurrentUserContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}, ({\n  user\n}) => __jsx(ChannelsContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}, ({\n  loading,\n  channels\n}) => loading && !channels.length ? __jsx(LoadingComponent, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}) : __jsx(App, {\n  centered: false,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, __jsx(Split, {\n  fixed: true,\n  flex: \"right\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, __jsx(Sidebar, {\n  colorIndex: \"neutral-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, __jsx(Header, {\n  pad: \"medium\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, __jsx(Title, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, \"TallerChat \", __jsx(ChatIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n})), __jsx(NewChannelContainer, {\n  channels: channels,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78\n  },\n  __self: this\n}, create => __jsx(AddChannelButton, {\n  icon: __jsx(AddCircleIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }),\n  onClick: () => create(window.prompt('Name your new channel')),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}))), __jsx(Box, {\n  flex: \"grow\",\n  justify: \"start\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}, __jsx(Menu, {\n  primary: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}, channels.map(({\n  name\n}) => __jsx(Link, {\n  key: name,\n  prefetch: true,\n  href: `/messages/${name}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}, __jsx(Anchor, {\n  className: channel === name ? 'active' : '',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94\n  },\n  __self: this\n}, \"# \", __jsx(\"b\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}, name)))))), __jsx(Footer, {\n  pad: \"medium\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}, __jsx(Button, {\n  icon: __jsx(UserIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }),\n  onClick: console.log,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103\n  },\n  __self: this\n}), __jsx(Button, {\n  icon: __jsx(LogoutIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }),\n  onClick: console.log,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}))), !user || !user.uid ? __jsx(LoadingComponent, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}) : __jsx(MessagesContainer, {\n  channel: channels.find(({\n    name\n  }) => name === channel),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}, ({\n  loading,\n  refetch,\n  messages\n}) => __jsx(Box, {\n  full: \"vertical\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113\n  },\n  __self: this\n}, __jsx(StyledRoomHeader, {\n  pad: {\n    vertical: 'small',\n    horizontal: 'medium'\n  },\n  justify: \"between\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}, __jsx(Title, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115\n  },\n  __self: this\n}, '#' + channel), __jsx(Button, {\n  icon: __jsx(RefreshIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }),\n  onClick: () => refetch(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119\n  },\n  __self: this\n})), __jsx(Box, {\n  pad: \"medium\",\n  flex: \"grow\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 122\n  },\n  __self: this\n}, loading ? 'Loading...' : messages.length === 0 ? 'No one talking here yet :(' : messages.map(({\n  id,\n  author,\n  message\n}) => __jsx(Box, {\n  key: id,\n  pad: \"small\",\n  credit: author,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 126\n  },\n  __self: this\n}, __jsx(StyledAuthor, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127\n  },\n  __self: this\n}, author), __jsx(StyledMessage, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128\n  },\n  __self: this\n}, message)))), __jsx(Box, {\n  pad: \"medium\",\n  direction: \"column\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 135\n  },\n  __self: this\n}, user && user.uid ? __jsx(NewMessageContainer, {\n  user: user,\n  channel: channels.find(({\n    name\n  }) => name === channel),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137\n  },\n  __self: this\n}, ({\n  handleSubmit\n}) => __jsx(\"form\", {\n  onSubmit: handleSubmit,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 142\n  },\n  __self: this\n}, __jsx(NewMessageContainer.Message, {\n  placeHolder: \"Message #general\",\n  component: StyledTextInput,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 143\n  },\n  __self: this\n}))) : 'Log in to post messages')))))));\n\nChatRoom.propTypes = {\n  url: PropTypes.object.isRequired\n};\nexport default bootstrap(ChatRoom);","map":{"version":3,"sources":["/drupal/app/next/pages/channel.js"],"names":["React","PropTypes","styled","Link","HashLoader","App","ChatIcon","RefreshIcon","AddCircleIcon","UserIcon","LogoutIcon","Split","Sidebar","Header","Footer","Title","Box","Menu","Anchor","Button","Paragraph","Label","bootstrap","TextInput","StyledRoomHeader","StyledMessage","StyledAuthor","StyledTextInput","AddChannelButton","LoadingComponent","CurrentUserContainer","ChannelsContainer","MessagesContainer","NewMessageContainer","NewChannelContainer","ChatRoom","url","query","channel","user","loading","channels","length","create","window","prompt","map","name","console","log","uid","find","refetch","messages","vertical","horizontal","id","author","message","handleSubmit","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["/**\n * This is the page rendered when inside a chat room.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Link from 'next/link'\n\nimport { HashLoader } from 'react-spinners'\nimport App from 'grommet/components/App'\nimport ChatIcon from 'grommet/components/icons/base/Chat'\nimport RefreshIcon from 'grommet/components/icons/base/Refresh'\nimport AddCircleIcon from 'grommet/components/icons/base/Add'\nimport UserIcon from 'grommet/components/icons/base/User'\nimport LogoutIcon from 'grommet/components/icons/base/Logout'\nimport Split from 'grommet/components/Split'\nimport Sidebar from 'grommet/components/Sidebar'\nimport Header from 'grommet/components/Header'\nimport Footer from 'grommet/components/Footer'\nimport Title from 'grommet/components/Title'\nimport Box from 'grommet/components/Box'\nimport Menu from 'grommet/components/Menu'\nimport Anchor from 'grommet/components/Anchor'\nimport Button from 'grommet/components/Button'\nimport Paragraph from 'grommet/components/Paragraph'\nimport Label from 'grommet/components/Label'\n\nimport bootstrap from 'app/lib/bootstrap'\nimport TextInput from 'app/modules/form/components/TextInput'\n\nconst StyledRoomHeader = styled(Header)`\n  border-bottom: 1px solid #ddd;\n`\n\nconst StyledMessage = styled(Paragraph)`\n  margin: 0;\n`\n\nconst StyledAuthor = styled(Label)`\n  margin: 0;\n`\n\nconst StyledTextInput = styled(TextInput)`\n  width: 100%;\n`\n\nconst AddChannelButton = styled(Button)`\n  margin-left: auto;\n`\n\nconst LoadingComponent = () => (\n  <Box full='vertical' justify='center' align='center'>\n    <HashLoader color='#e02438' loading />\n  </Box>\n)\n\nimport CurrentUserContainer from 'app/modules/auth/containers/CurrentUserContainer'\nimport ChannelsContainer from 'app/modules/channel/containers/ChannelsContainer'\nimport MessagesContainer from 'app/modules/channel/containers/MessagesContainer'\nimport NewMessageContainer from 'app/modules/channel/containers/NewMessageContainer'\nimport NewChannelContainer from 'app/modules/channel/containers/NewChannelContainer'\n\nconst ChatRoom = ({ url, url: { query: { channel = 'general' } } }) => (\n  <CurrentUserContainer>\n    { ({ user }) => (\n      <ChannelsContainer>\n        { ({ loading, channels }) => (\n          (loading && !channels.length) ? <LoadingComponent /> : (\n            <App centered={ false }>\n              <Split fixed flex='right'>\n                <Sidebar colorIndex='neutral-1'>\n                  <Header pad='medium'>\n                    <Title>\n                      TallerChat <ChatIcon />\n                    </Title>\n\n                    <NewChannelContainer channels={ channels }>\n                      { create => (\n                        <AddChannelButton\n                          icon={ <AddCircleIcon /> }\n                          onClick={ () => create(\n                            window.prompt('Name your new channel')\n                          ) }\n                        />\n                      ) }\n                    </NewChannelContainer>\n                  </Header>\n\n                  <Box flex='grow' justify='start'>\n                    <Menu primary>\n                      { channels.map(({ name }) => (\n                        <Link key={ name } prefetch href={ `/messages/${name}` }>\n                          <Anchor className={ channel === name ? 'active' : '' }>\n                            # <b>{ name }</b>\n                          </Anchor>\n                        </Link>\n                      )) }\n                    </Menu>\n                  </Box>\n\n                  <Footer pad='medium'>\n                    <Button icon={ <UserIcon /> } onClick={ console.log } />\n                    <Button icon={ <LogoutIcon /> } onClick={ console.log } />\n                  </Footer>\n                </Sidebar>\n\n                { !user || !user.uid ? (\n                  <LoadingComponent />\n                ) : (\n                  <MessagesContainer channel={ channels.find(({ name }) => name === channel) }>\n                    { ({ loading, refetch, messages }) => (\n                      <Box full='vertical'>\n                        <StyledRoomHeader pad={ { vertical: 'small', horizontal: 'medium' } } justify='between'>\n                          <Title>\n                            { '#' + channel }\n                          </Title>\n\n                          <Button icon={ <RefreshIcon /> } onClick={ () => refetch() } />\n                        </StyledRoomHeader>\n\n                        <Box pad='medium' flex='grow'>\n                          { loading ? 'Loading...' : (\n                            messages.length === 0 ? 'No one talking here yet :(' : (\n                              messages.map(({ id, author, message }) => (\n                                <Box key={ id } pad='small' credit={ author }>\n                                  <StyledAuthor>{ author }</StyledAuthor>\n                                  <StyledMessage>{ message }</StyledMessage>\n                                </Box>\n                              ))\n                            )\n                          ) }\n                        </Box>\n\n                        <Box pad='medium' direction='column'>\n                          { user && user.uid ? (\n                            <NewMessageContainer\n                              user={ user }\n                              channel={ channels.find(({ name }) => name === channel) }\n                            >\n                              { ({ handleSubmit }) => (\n                                <form onSubmit={ handleSubmit }>\n                                  <NewMessageContainer.Message\n                                    placeHolder='Message #general'\n                                    component={ StyledTextInput }\n                                  />\n                                </form>\n                              ) }\n                            </NewMessageContainer>\n                          ) : (\n                            'Log in to post messages'\n                          ) }\n                        </Box>\n                      </Box>\n                    ) }\n                  </MessagesContainer>\n                ) }\n\n              </Split>\n            </App>\n          )\n        ) }\n      </ChannelsContainer>\n    ) }\n  </CurrentUserContainer>\n)\n\nChatRoom.propTypes = {\n  url: PropTypes.object.isRequired,\n}\n\nexport default bootstrap(ChatRoom)\n"]},"metadata":{},"sourceType":"module"}