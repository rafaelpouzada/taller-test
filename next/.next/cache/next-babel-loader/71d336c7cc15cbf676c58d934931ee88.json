{"ast":null,"code":"\"use strict\";\n\nimport _Symbol$toPrimitive from \"@babel/runtime-corejs2/core-js/symbol/to-primitive\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[_Symbol$toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nimport * as R from 'ramda';\n/**\n * Empty function. Commonly used for default func properties.\n */\n\nexport const noop = () => {};\n/**\n * Higher-order function to stop event propagations.\n */\n\nexport const stopPropagation = fn => (event, ...args) => {\n  if (event) event.stopPropagation();\n  return fn ? fn(event, ...args) : undefined;\n};\n/**\n * Higher-order function to prevent event handler defaults.\n */\n\nexport const preventDefault = fn => (event, ...args) => {\n  if (event) event.preventDefault();\n  return fn ? fn(event, ...args) : undefined;\n};\n/**\n * Helper method to both stop propagation and prevent default for event handlers.\n */\n\nexport const finishEvent = R.compose(stopPropagation, preventDefault);\n/**\n * Renames a property on a given object.\n *\n * @param {String} from Original property name.\n * @param {String} to New property name.\n * @param {Object} object The object to apply the renaming.\n * @return {Object} return The resulting object.\n */\n\nexport const rename = R.curry((from, to, obj) => obj ? R.omit([from], _objectSpread({\n  [to]: obj[from]\n}, obj)) : obj);\n/**\n * Function version of throw, to facilitate composition.\n *\n * @param {Object} err Object (usually an error) to be thrown.\n * @throws {Object} err.\n */\n\nexport const launch = err => {\n  throw err;\n};\n/**\n * Rethrow composition helper.\n *\n * @param {Function} fn Function to call.\n * @param {Error} err Thrown error.\n * @return void\n */\n\nexport const rethrow = R.pipe(R.prepend(R.__, [launch]), R.juxt);\n/**\n * Flatten an object's prop.\n * @param {String} prop.\n * @param {Object} object.\n * @return {Object} object.\n */\n\nexport const flatten = R.curry((prop, _ref) => {\n  let {\n    [prop]: toFlatten\n  } = _ref,\n      object = _objectWithoutProperties(_ref, [prop].map(_toPropertyKey));\n\n  return _objectSpread({}, object, toFlatten);\n});\n/**\n * Check if code is running on the client.\n *\n * If process is available (Next), check if it has a property \"browser\".\n * Otherwise, check if a window object is available.\n */\n\nexport const isClient = () => typeof process !== 'undefined' ? !!process.browser : false;\n/**\n * Check if code is running on the server.\n */\n\nexport const isServer = R.complement(isClient);\n/**\n * Check if code is running on production mode.\n */\n\nexport const isProduction = () => typeof process !== 'undefined' && process.env.NODE_ENV === 'production';\n/**\n * Check if code is running on development mode.\n */\n\nexport const isDevelopment = R.complement(isProduction);","map":{"version":3,"sources":["/drupal/app/next/src/lib/func.js"],"names":["R","noop","stopPropagation","fn","event","args","undefined","preventDefault","finishEvent","compose","rename","curry","from","to","obj","omit","launch","err","rethrow","pipe","prepend","__","juxt","flatten","prop","toFlatten","object","isClient","process","browser","isServer","complement","isProduction","env","NODE_ENV","isDevelopment"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,CAAZ,MAAmB,OAAnB;AAEA;;;;AAGA,OAAO,MAAMC,IAAI,GAAG,MAAM,CAAE,CAArB;AAEP;;;;AAGA,OAAO,MAAMC,eAAe,GAAGC,EAAE,IAAI,CAACC,KAAD,EAAQ,GAAGC,IAAX,KAAoB;AACvD,MAAID,KAAJ,EAAWA,KAAK,CAACF,eAAN;AACX,SAAOC,EAAE,GAAGA,EAAE,CAACC,KAAD,EAAQ,GAAGC,IAAX,CAAL,GAAwBC,SAAjC;AACD,CAHM;AAKP;;;;AAGA,OAAO,MAAMC,cAAc,GAAGJ,EAAE,IAAI,CAACC,KAAD,EAAQ,GAAGC,IAAX,KAAoB;AACtD,MAAID,KAAJ,EAAWA,KAAK,CAACG,cAAN;AACX,SAAOJ,EAAE,GAAGA,EAAE,CAACC,KAAD,EAAQ,GAAGC,IAAX,CAAL,GAAwBC,SAAjC;AACD,CAHM;AAKP;;;;AAGA,OAAO,MAAME,WAAW,GAAGR,CAAC,CAACS,OAAF,CAAUP,eAAV,EAA2BK,cAA3B,CAApB;AAEP;;;;;;;;;AAQA,OAAO,MAAMG,MAAM,GAAGV,CAAC,CAACW,KAAF,CACpB,CAACC,IAAD,EAAOC,EAAP,EAAWC,GAAX,KAAmBA,GAAG,GAClBd,CAAC,CAACe,IAAF,CAAO,CAACH,IAAD,CAAP;AAAiB,GAACC,EAAD,GAAMC,GAAG,CAACF,IAAD;AAA1B,GAAqCE,GAArC,EADkB,GAElBA,GAHgB,CAAf;AAMP;;;;;;;AAMA,OAAO,MAAME,MAAM,GAAGC,GAAG,IAAI;AAC3B,QAAMA,GAAN;AACD,CAFM;AAIP;;;;;;;;AAOA,OAAO,MAAMC,OAAO,GAAGlB,CAAC,CAACmB,IAAF,CACrBnB,CAAC,CAACoB,OAAF,CAAUpB,CAAC,CAACqB,EAAZ,EAAgB,CAACL,MAAD,CAAhB,CADqB,EAErBhB,CAAC,CAACsB,IAFmB,CAAhB;AAKP;;;;;;;AAMA,OAAO,MAAMC,OAAO,GAAGvB,CAAC,CAACW,KAAF,CAAQ,CAACa,IAAD;AAAA,MAAO;AAAE,KAACA,IAAD,GAAQC;AAAV,GAAP;AAAA,MAA+BC,MAA/B,mCAAUF,IAAV;;AAAA,2BAAkDE,MAAlD,EAA6DD,SAA7D;AAAA,CAAR,CAAhB;AAEP;;;;;;;AAMA,OAAO,MAAME,QAAQ,GAAG,MAAM,OAAOC,OAAP,KAAmB,WAAnB,GAC1B,CAAC,CAACA,OAAO,CAACC,OADgB,QAAvB;AAIP;;;;AAGA,OAAO,MAAMC,QAAQ,GAAG9B,CAAC,CAAC+B,UAAF,CAAaJ,QAAb,CAAjB;AAEP;;;;AAGA,OAAO,MAAMK,YAAY,GAAG,MAAM,OAAOJ,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACK,GAAR,CAAYC,QAAZ,KAAyB,YAAtF;AAEP;;;;AAGA,OAAO,MAAMC,aAAa,GAAGnC,CAAC,CAAC+B,UAAF,CAAaC,YAAb,CAAtB","sourcesContent":["import * as R from 'ramda'\n\n/**\n * Empty function. Commonly used for default func properties.\n */\nexport const noop = () => {}\n\n/**\n * Higher-order function to stop event propagations.\n */\nexport const stopPropagation = fn => (event, ...args) => {\n  if (event) event.stopPropagation()\n  return fn ? fn(event, ...args) : undefined\n}\n\n/**\n * Higher-order function to prevent event handler defaults.\n */\nexport const preventDefault = fn => (event, ...args) => {\n  if (event) event.preventDefault()\n  return fn ? fn(event, ...args) : undefined\n}\n\n/**\n * Helper method to both stop propagation and prevent default for event handlers.\n */\nexport const finishEvent = R.compose(stopPropagation, preventDefault)\n\n/**\n * Renames a property on a given object.\n *\n * @param {String} from Original property name.\n * @param {String} to New property name.\n * @param {Object} object The object to apply the renaming.\n * @return {Object} return The resulting object.\n */\nexport const rename = R.curry(\n  (from, to, obj) => obj\n    ? R.omit([from], { [to]: obj[from], ...obj })\n    : obj\n)\n\n/**\n * Function version of throw, to facilitate composition.\n *\n * @param {Object} err Object (usually an error) to be thrown.\n * @throws {Object} err.\n */\nexport const launch = err => {\n  throw err\n}\n\n/**\n * Rethrow composition helper.\n *\n * @param {Function} fn Function to call.\n * @param {Error} err Thrown error.\n * @return void\n */\nexport const rethrow = R.pipe(\n  R.prepend(R.__, [launch]),\n  R.juxt\n)\n\n/**\n * Flatten an object's prop.\n * @param {String} prop.\n * @param {Object} object.\n * @return {Object} object.\n */\nexport const flatten = R.curry((prop, { [prop]: toFlatten, ...object }) => ({ ...object, ...toFlatten }))\n\n/**\n * Check if code is running on the client.\n *\n * If process is available (Next), check if it has a property \"browser\".\n * Otherwise, check if a window object is available.\n */\nexport const isClient = () => typeof process !== 'undefined'\n  ? !!process.browser\n  : typeof window !== 'undefined'\n\n/**\n * Check if code is running on the server.\n */\nexport const isServer = R.complement(isClient)\n\n/**\n * Check if code is running on production mode.\n */\nexport const isProduction = () => typeof process !== 'undefined' && process.env.NODE_ENV === 'production'\n\n/**\n * Check if code is running on development mode.\n */\nexport const isDevelopment = R.complement(isProduction)\n"]},"metadata":{},"sourceType":"module"}