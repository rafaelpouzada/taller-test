{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol/to-primitive.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./pages/index.js","webpack:///./src/containers/IgnoreStyleSheets.js","webpack:///./src/lib/bootstrap.js","webpack:///./src/lib/form/validation.js","webpack:///./src/lib/func.js","webpack:///./src/lib/initApollo.js","webpack:///./src/lib/withData.js","webpack:///./src/modules/auth/containers/SigninContainer/SigninContainer.js","webpack:///./src/modules/auth/containers/SigninContainer/index.js","webpack:///./src/modules/auth/containers/SigninContainer/mutations.js","webpack:///./src/modules/form/components/CheckBox.js","webpack:///./src/modules/form/components/TextInput.js","webpack:///./src/modules/form/lib/utils.js","webpack:///./src/process.js","webpack:///external \"apollo-cache-inmemory\"","webpack:///external \"apollo-client\"","webpack:///external \"apollo-link-http\"","webpack:///external \"conducer\"","webpack:///external \"core-js/library/fn/array/is-array\"","webpack:///external \"core-js/library/fn/json/stringify\"","webpack:///external \"core-js/library/fn/object/assign\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"core-js/library/fn/symbol/to-primitive\"","webpack:///external \"graphql-tag\"","webpack:///external \"grommet/components/App\"","webpack:///external \"grommet/components/Box\"","webpack:///external \"grommet/components/Button\"","webpack:///external \"grommet/components/CheckBox\"","webpack:///external \"grommet/components/Footer\"","webpack:///external \"grommet/components/Form\"","webpack:///external \"grommet/components/FormField\"","webpack:///external \"grommet/components/Heading\"","webpack:///external \"grommet/components/Headline\"","webpack:///external \"grommet/components/Image\"","webpack:///external \"grommet/components/TextInput\"","webpack:///external \"grommet/components/icons/base/Chat\"","webpack:///external \"isomorphic-fetch\"","webpack:///external \"next/head\"","webpack:///external \"next/router\"","webpack:///external \"object-path\"","webpack:///external \"prop-types\"","webpack:///external \"ramda\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"react-final-form\"","webpack:///external \"recompose\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"core-js/library/fn/array/is-array\");","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/symbol/to-primitive\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$assign from \"../../core-js/object/assign\";\nexport default function _extends() {\n  _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import _Object$getOwnPropertyDescriptor from \"../../core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"../../core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"../../core-js/object/keys\";\nimport defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import _Object$getOwnPropertySymbols from \"../../core-js/object/get-own-property-symbols\";\nimport objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (_Object$getOwnPropertySymbols) {\n    var sourceSymbolKeys = _Object$getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import _Object$keys from \"../../core-js/object/keys\";\nexport default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n\n  var sourceKeys = _Object$keys(source);\n\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport App from 'grommet/components/App'\nimport Box from 'grommet/components/Box'\nimport Image from 'grommet/components/Image'\nimport Headline from 'grommet/components/Headline'\nimport ChatIcon from 'grommet/components/icons/base/Chat'\n\nimport Form from 'grommet/components/Form'\nimport Heading from 'grommet/components/Heading'\nimport Button from 'grommet/components/Button'\nimport Footer from 'grommet/components/Footer'\nimport FormField from 'grommet/components/FormField'\n\nimport bootstrap from 'app/lib/bootstrap'\nimport SigninContainer, { labels } from 'app/modules/auth/containers/SigninContainer'\n\nimport TextInput from 'app/modules/form/components/TextInput'\nimport CheckBox from 'app/modules/form/components/CheckBox'\n\nconst StyledImage = styled(Image)`\n  width: auto;\n  margin-bottom: 2rem;\n`\n\nconst SignInPage = () => (\n  <App>\n    <Box full='vertical' justify='center' align='center' pad={ { vertical: 'large' } }>\n      <StyledImage src='/static/logo.png' />\n\n      <Headline>Welcome to the <b>TallerChat</b> <ChatIcon size='large' colorIndex='critical' /></Headline>\n\n      <SigninContainer>\n        { ({ handleSubmit, submitting, invalid, values: { register }, ...form }) => (\n          <Form pad='medium' onSubmit={ handleSubmit }>\n            <Heading strong tag='h2' align='center'>Sign In</Heading>\n\n            <fieldset>\n              <FormField label={ labels.name }>\n                <SigninContainer.Username\n                  autoFocus\n                  disabled={ submitting }\n                  component={ TextInput }\n                />\n              </FormField>\n\n              { register && (\n                <FormField label={ labels.email }>\n                  <SigninContainer.Email\n                    disabled={ submitting }\n                    component={ TextInput }\n                  />\n                </FormField>\n              ) }\n\n              <FormField label={ labels.password }>\n                <SigninContainer.Password\n                  disabled={ submitting }\n                  component={ TextInput }\n                />\n              </FormField>\n\n              { register && (\n                <FormField label={ labels.passwordConfirm }>\n                  <SigninContainer.PasswordConfirm\n                    disabled={ submitting }\n                    component={ TextInput }\n                  />\n                </FormField>\n              ) }\n            </fieldset>\n\n            <Box margin={ { bottom: 'medium' } }>\n              <SigninContainer.Register\n                label=\"I'm new here\"\n                disabled={ submitting }\n                component={ CheckBox }\n              />\n            </Box>\n\n            <Errors { ...form } />\n\n            <Footer size='small' direction='column' align='center' pad={ { between: 'medium' } }>\n              <Button fill primary\n                type='submit'\n                label={ register ? (submitting ? 'Registering...' : 'Register') : (submitting ? 'Logging...' : 'Log In') }\n                disabled={ invalid || submitting }\n              />\n            </Footer>\n          </Form>\n        ) }\n      </SigninContainer>\n    </Box>\n  </App>\n)\n\nconst ErrorBox = styled(Box)`\n  ul {\n    margin: 0 0 0 1.5rem;\n  }\n`\n\n/**\n * Component to show form errors.\n */\nconst Errors = ({ errors, submitErrors, touched }) => {\n  const errorMessages = Object.keys(errors)\n    .filter(field => touched[field])\n    .map(field => [labels[field], errors[field]])\n\n  return (\n    <React.Fragment>\n      { submitErrors && (\n        <ErrorBox colorIndex='critical' pad='small' margin={ { vertical: 'small' } }>\n          { submitErrors }\n        </ErrorBox>\n      ) }\n\n      { !!errorMessages.length && (\n        <ErrorBox colorIndex='critical' pad='small' margin={ { vertical: 'small' } }>\n          <ul>\n            { errorMessages.map(([label, error]) => (\n              <li key={ label }>{ label }: <i>{ error }</i></li>\n            )) }\n          </ul>\n        </ErrorBox>\n      ) }\n    </React.Fragment>\n  )\n}\n\nErrors.propTypes = {\n  errors: PropTypes.object,\n  submitErrors: PropTypes.string,\n  touched: PropTypes.object,\n}\n\nexport default bootstrap(SignInPage)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ServerStyleSheet, StyleSheetManager } from 'styled-components'\n\n/**\n * SSR solutions constantly need to create a virtual tree to collect data,\n * such as Apollo does to perform queries on the server-side. When using\n * multiple of these solutions - styled-components is another case - there\n * might happen a clash of data because of duplicated rendering down the tree.\n *\n * The following component can be used to avoid collecting styled on a virtual\n * tree such as that created to collect Apollo queries results.\n */\n\nexport const IgnoreStyleSheets = ({ children }) => (\n  <StyleSheetManager sheet={ (new ServerStyleSheet()).instance }>\n    { children }\n  </StyleSheetManager>\n)\n\nIgnoreStyleSheets.propTypes = {\n  children: PropTypes.node,\n}\n","import connectApollo from './withData'\nexport default connectApollo\n","import * as R from 'ramda'\nimport { every } from 'conducer'\n// import isURL from 'is-url'\n\nconst isEmpty = value => typeof value === 'undefined' ||\n  (Array.isArray(value) && value.length === 0) ||\n  value === null ||\n  value === ''\n\nconst isNotEmpty = R.complement(isEmpty)\nconst isNotEmail = value => !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\n// const isNotNumeric = value => !/^(\\d+(\\.\\d+)?)$/.test(value)\n// const isNotInteger = value => Number(value) !== Math.floor(value)\n// const isNotURL = R.complement(isURL)\n\n/*\n * Validation rules.\n */\n\nexport const nil = () => undefined\nexport const required = value => isEmpty(value) && 'Required'\n// export const url = value => every([isNotEmpty, isNotURL])(value) && 'Invalid URL'\nexport const email = value => every([isNotEmpty, isNotEmail])(value) && 'Must be a valid e-mail'\n// export const number = value => every([isNotEmpty, isNotNumeric])(value) && 'Digite apenas números'\n// export const integer = value => number(value) || isNotInteger(value) && 'Digite apenas números inteiros'\n// export const checked = value => !value && 'Este campo deve estar marcado'\n// export const min = min => value => value < min && `Número deve ser maior ou igual a ${min}`\n// export const max = max => value => value >= max && `Número deve ser menor que ${max}`\n\nexport const equalsField = (field, label) => (value, values) =>\n  value !== values[field] && `Must equal field ${label}`\n\n// export const oneOf = (options = [], error = 'Opção inválida', caseSensitive = true) =>\n//   value => options\n//     .map(str => caseSensitive ? str : str.toLowerCase())\n//     .indexOf(caseSensitive ? value : value && value.toLowerCase()) === -1 && error\n\n// export const maxLength = max => value => {\n//   if (!isEmpty(value) && value.length > max) {\n//     return `Não deve ter mais de ${max} caracteres`\n//   }\n// }\n\nexport const minLength = min => value => {\n  if (!isEmpty(value) && value.length < min) {\n    return `Must have at least ${min} characters`\n  }\n}\n\n/*\n * Combine multiple validation rules into one..\n */\nexport const combine = rules => (...args) => {\n  const _rules = [].concat(rules)\n\n  for (let i = 0; i < _rules.length; i++) {\n    const error = _rules[i](...args)\n    if (error) return error\n  }\n}\n\n/**\n * Conditionally validates a field.\n *\n * @param {Function} condition Callback to check if should validate. Receives the field\n *                             value as first argument and the whole form data as second.\n * @param {Array|Function} rules Either a single rule function or an array of rules.\n *\n * @return {Function} A configured conditional rule.\n */\nexport const condition = (condition, rules) => (...args) =>\n  condition(...args) ? combine(rules)(...args) : undefined\n\n/**\n * Branch validate based on field current value.\n *\n * @param {Function} test Branch predicate.\n * @param {Array|Function} leftRules Rules to apply when predicates true.\n * @param {Array|Function} rightRules Rules to apply when predicates false.\n */\nexport const branch = (test, leftRules, rightRules = nil) => (...args) =>\n  combine(test(...args) ? leftRules : rightRules)(...args)\n","import * as R from 'ramda'\n\n/**\n * Empty function. Commonly used for default func properties.\n */\nexport const noop = () => {}\n\n/**\n * Higher-order function to stop event propagations.\n */\nexport const stopPropagation = fn => (event, ...args) => {\n  if (event) event.stopPropagation()\n  return fn ? fn(event, ...args) : undefined\n}\n\n/**\n * Higher-order function to prevent event handler defaults.\n */\nexport const preventDefault = fn => (event, ...args) => {\n  if (event) event.preventDefault()\n  return fn ? fn(event, ...args) : undefined\n}\n\n/**\n * Helper method to both stop propagation and prevent default for event handlers.\n */\nexport const finishEvent = R.compose(stopPropagation, preventDefault)\n\n/**\n * Renames a property on a given object.\n *\n * @param {String} from Original property name.\n * @param {String} to New property name.\n * @param {Object} object The object to apply the renaming.\n * @return {Object} return The resulting object.\n */\nexport const rename = R.curry(\n  (from, to, obj) => obj\n    ? R.omit([from], { [to]: obj[from], ...obj })\n    : obj\n)\n\n/**\n * Function version of throw, to facilitate composition.\n *\n * @param {Object} err Object (usually an error) to be thrown.\n * @throws {Object} err.\n */\nexport const launch = err => {\n  throw err\n}\n\n/**\n * Rethrow composition helper.\n *\n * @param {Function} fn Function to call.\n * @param {Error} err Thrown error.\n * @return void\n */\nexport const rethrow = R.pipe(\n  R.prepend(R.__, [launch]),\n  R.juxt\n)\n\n/**\n * Flatten an object's prop.\n * @param {String} prop.\n * @param {Object} object.\n * @return {Object} object.\n */\nexport const flatten = R.curry((prop, { [prop]: toFlatten, ...object }) => ({ ...object, ...toFlatten }))\n\n/**\n * Check if code is running on the client.\n *\n * If process is available (Next), check if it has a property \"browser\".\n * Otherwise, check if a window object is available.\n */\nexport const isClient = () => typeof process !== 'undefined'\n  ? !!process.browser\n  : typeof window !== 'undefined'\n\n/**\n * Check if code is running on the server.\n */\nexport const isServer = R.complement(isClient)\n\n/**\n * Check if code is running on production mode.\n */\nexport const isProduction = () => typeof process !== 'undefined' && process.env.NODE_ENV === 'production'\n\n/**\n * Check if code is running on development mode.\n */\nexport const isDevelopment = R.complement(isProduction)\n","import process from 'process'\nimport fetch from 'isomorphic-fetch'\nimport { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { createHttpLink } from 'apollo-link-http'\n\nimport { isDevelopment, isClient, isServer } from 'app/lib/func'\n\nconst GRAPHQL_HOST = process.env.GRAPHQL_HOST\n\nif (!GRAPHQL_HOST) {\n  throw new Error('You must set GRAPHQL_HOST environment variable prior to using Apollo.')\n}\n\n// Polyfill fetch() if needed. Useful for server-side code.\nconst fetcher = global.fetch || fetch\n\n// Override fetch to always include credentials.\n// @TODO: could this be done elsewhere?\nglobal.fetch = (uri, options = {}) => {\n  options.credentials = 'include'\n  return fetcher(uri, options)\n}\n\n/**\n * ID normalization. Will use, in order of precedence, a provided 'id', '_id', or\n * 'entityId' field as unique identificator, prefixed with the object's type.\n *\n * Fallbacks to default normalization system.\n *\n * @param {String} id The object's unique id.\n * @param {String} _id The object's unique id.\n * @param {String} entityId The object's unique id.\n * @param {String} __typename The object's type in GraphQL.\n *\n * @return {!String} Either a unique identificator if found, or nil.\n */\nconst dataIdFromObject = ({ id, _id, entityId, __typename }) => id || _id || entityId\n  ? `${__typename}:${id || _id || entityId}`\n  : undefined\n\nconst defaultCacheOptions = { dataIdFromObject }\n\nconst typesQuery = `\n  {\n    __schema {\n      types {\n        kind\n        name\n        possibleTypes {\n          name\n        }\n      }\n    }\n  }\n`\n\nlet instrospectionResult = null\n\n/**\n * Loads instrospection data.\n * Performs a first non-client query to get GraphQL type\n * information. This process should run only once on the server.\n */\nconst getIntrospectionData = () => fetch(GRAPHQL_HOST, {\n  headers: { 'Content-Type': 'application/json' },\n  body: JSON.stringify({ query: typesQuery }),\n  method: 'POST'\n})\n  .then(result => result.json())\n  .then(result => {\n    // here we're filtering out any type information unrelated to unions or interfaces\n    const filteredData = result.data.__schema.types.filter(\n      type => type.possibleTypes !== null,\n    )\n    result.data.__schema.types = filteredData\n\n    return result.data\n  })\n\n/**\n * Instrospect the GraphQL server for type information (unions, interface, etc.).\n * Either get data from a new query execution or from an already fetched instrospetion result\n */\nexport const introspect = async () => instrospectionResult || (instrospectionResult = await getIntrospectionData())\n\n/**\n * Creates a new ApolloClient instance.\n *\n * @param {Object} initialState Hydrating state.\n * @return {ApolloClient}.\n */\nconst create = ({\n  context,\n  initialState = {},\n  cacheOptions = {},\n}) => new ApolloClient({\n  connectToDevTools: isClient() && isDevelopment(),\n  ssrMode: isServer(), // Disables forceFetch on the server (so queries are only run once)\n  link: createHttpLink({ uri: GRAPHQL_HOST }),\n  cache: new InMemoryCache({ ...defaultCacheOptions, ...cacheOptions })\n    .restore(initialState)\n})\n\nlet apolloClient = null\n\n/**\n * Initialize ApolloClient for either server ou client side.\n *\n * @param {Object} options.initialState\n * @param {Object} options.context\n * @param {Object} options.cache\n */\nexport default options => isClient() // \"client-side?\"\n  // On the CLIENT, always reuse any available ApolloClient instance.\n  ? apolloClient || (apolloClient = create(options))\n\n  // On the SERVER, always create a new ApolloClient instance.\n  // @TODO: we should reconsider this. Maybe it is best to consider SSR execution\n  // as an anonymous request always, and let contextual data be handled on the client,\n  // thus improving performance for the majority of users, which are anonymous.\n  : create(options)\n","import React from 'react'\nimport { pick } from 'ramda'\nimport PropTypes from 'prop-types'\nimport { getDisplayName } from 'recompose'\nimport { ApolloProvider, getDataFromTree } from 'react-apollo'\nimport { IntrospectionFragmentMatcher } from 'apollo-cache-inmemory'\nimport Head from 'next/head'\n\nimport initApollo, { introspect } from './initApollo'\n\nimport { IgnoreStyleSheets } from '../containers/IgnoreStyleSheets'\n\nexport default ComposedComponent => class WithData extends React.Component {\n  static displayName = `WithData(${getDisplayName(ComposedComponent)})`\n\n  static propTypes = {\n    __APOLLO_STATE__: PropTypes.object,\n    __APOLLO_INSTROSPECTION__: PropTypes.object,\n  }\n\n  /**\n   * Fetch GraphQL data on server to match request.\n   *\n   * Next.js is of big help here; it WILL automatically run this function\n   * on first page load (not when routing on the client-side) and inject the\n   * resolved properties, serialized, to the component once it is loaded on the\n   * client-side.\n   *\n   * Keep in mind that for client-side routing this method WILL get called,\n   * meaning you have to account for it running on some situations.\n   *\n   * @param {Object} ctx\n   * @param {String} ctx.pathname Path section of URL\n   * @param {Object} ctx.query Query string section of URL parsed as an object\n   * @param {String} ctx.asPath String of the actual path (including the query) shows in the browser\n   * @param {Object} ctx.req HTTP request object (server only)\n   * @param {Object} ctx.res HTTP response object (server only)\n   * @param {Object} ctx.jsonPageRes Fetch Response object (client only)\n   * @param {Object} ctx.err Error object if any error is encountered during the rendering\n   *\n   * @return {Object} initial props.\n   */\n  static async getInitialProps (ctx) {\n    // Evaluate the composed component's getInitialProps().\n    // This setup is needed to allow for additional getInitialProps on each\n    // page using Apollo connector.\n    const props = ComposedComponent && ComposedComponent.getInitialProps\n      ? await ComposedComponent.getInitialProps(ctx)\n      : {}\n\n    const introspectionQueryResultData = await introspect()\n    const fragmentMatcher = new IntrospectionFragmentMatcher({ introspectionQueryResultData })\n\n    const initialProps = { __APOLLO_INSTROSPECTION__: introspectionQueryResultData, ...props }\n\n    // When already on the client-side, do not defer initialization.\n    if (process.browser || process.env.APOLLO_SSR_OFF) return initialProps\n\n    const apolloClient = initApollo({\n      context: pick(['res'], ctx),\n      cacheOptions: { fragmentMatcher }\n    })\n\n    try {\n      const router = pick(['query', 'pathname', 'asPath', 'res', 'req'], ctx)\n\n      /**\n       * Some contexts are not available during SSR. `router`, for instance.\n       * We are basically passing to getDataFromTree an extra context object to\n       * hold these, when necessary.\n       *\n       * @see: https://github.com/zeit/next.js/issues/2908\n       */\n      const context = { router }\n\n      // Mount ComposedComponent element tree.\n      const tree = (\n        <ApolloProvider client={ apolloClient }>\n          <IgnoreStyleSheets>\n            <ComposedComponent url={ router } { ...props } />\n          </IgnoreStyleSheets>\n        </ApolloProvider>\n      )\n\n      // Run all GraphQL queries in the component tree and extract the resulting data\n      await getDataFromTree(tree, context)\n    }\n    catch (error) {\n      console.error('SSR Apollo data loading error:', error)\n      // Prevent Apollo Client GraphQL errors from crashing SSR.\n      // Handle them in components via the data.error prop:\n      // http://dev.apollodata.com/react/api-queries.html#graphql-query-data-error\n    }\n\n    // getDataFromTree does not call componentWillUnmount\n    // head side effect therefore need to be cleared manually\n    Head.rewind()\n\n    // Inject current Apollo state on the page's initial properties.\n    initialProps.__APOLLO_STATE__ = apolloClient.cache.extract()\n\n    return initialProps\n  }\n\n  constructor (props) {\n    super(props)\n\n    const fragmentMatcher = new IntrospectionFragmentMatcher({\n      introspectionQueryResultData: this.props.__APOLLO_INSTROSPECTION__\n    })\n\n    this.apollo = initApollo({\n      initialState: this.props.__APOLLO_STATE__,\n      cacheOptions: { fragmentMatcher },\n    })\n  }\n\n  render () {\n    // Extract Apollo state, for ComposedComponent doesn't need to know it existed.\n    const { __APOLLO_STATE__, __APOLLO_INSTROSPECTION__, ...props } = this.props\n\n    return (\n      <ApolloProvider client={ this.apollo }>\n        <ComposedComponent { ...props } />\n      </ApolloProvider>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form, Field } from 'react-final-form'\nimport { Mutation } from 'react-apollo'\nimport Router from 'next/router'\n\nimport { combine, condition, required, minLength, email, equalsField } from 'app/lib/form/validation'\n\nimport { loginMutation, registerMutation } from './mutations'\n\nexport const labels = {\n  name: 'Username',\n  email: 'E-mail',\n  password: 'Password',\n  passwordConfirm: 'Confirm password',\n}\n\nconst validations = {\n  name: combine([required]),\n  email: combine([required, email]),\n  password: combine([required, minLength(6)]),\n  passwordConfirm: condition(\n    (value, { register }) => register,\n    [required, equalsField('password', labels.password)],\n  )\n}\n\n/**\n * Grab actual error from GraphQL error.\n */\nconst normalizeError = err => err.graphQLErrors ? err.graphQLErrors[0].message : err.message\n\n/**\n * Redirect when registered/logged in.\n */\nconst redirect = () => {\n  Router.push('/channel', '/messages/general')\n  return undefined\n}\n\n/**\n * Submit handler: switch between register and login based on form values.\n */\nconst handleSubmit = ({ register, login }) => variables =>\n  (variables.register ? register : login)({ variables })\n    .then(redirect)\n    .catch(normalizeError)\n\nconst SigninContainer = ({ children }) => (\n  <Mutation mutation={ loginMutation }>\n    { login => (\n      <Mutation mutation={ registerMutation }>\n        { register => (\n          <Form\n            children={ children }\n            onSubmit={ handleSubmit({ register, login }) }\n          />\n        ) }\n      </Mutation>\n    ) }\n  </Mutation>\n)\n\n/**\n * Composable name field.\n */\nSigninContainer.Username = props => (\n  <Field\n    name='name'\n    validate={ validations.name }\n    { ...props }\n  />\n)\n\n/**\n * Composable e-mail field.\n */\nSigninContainer.Email = props => (\n  <Field\n    name='email'\n    validate={ validations.email }\n    { ...props }\n  />\n)\n\n/**\n * Composable password field.\n */\nSigninContainer.Password = props => (\n  <Field\n    name='password'\n    type='password'\n    validate={ validations.password }\n    { ...props }\n  />\n)\n\n/**\n * Composable password-confirm field.\n */\nSigninContainer.PasswordConfirm = props => (\n  <Field\n    name='passwordConfirm'\n    type='password'\n    validate={ validations.passwordConfirm }\n    validateFields={ ['password'] }\n    { ...props }\n  />\n)\n\n/**\n * Composable register field.\n */\nSigninContainer.Register = props => (\n  <Field name='register' { ...props } />\n)\n\nSigninContainer.propTypes = {\n  children: PropTypes.func,\n}\n\nexport default SigninContainer\n","import SigninContainer, { labels } from './SigninContainer'\nexport { labels }\nexport default SigninContainer\n","import gql from 'graphql-tag'\n\nexport const loginMutation = gql`\n  mutation UserLogin($name: String!, $password: String!) {\n    user: userLogin (name: $name, password: $password) {\n      uid\n      name\n    }\n  }\n`\n\nexport const registerMutation = gql`\n  mutation UserRegister($name: String!, $email: String!, $password: String!) {\n    user: userRegister (name: $name, email: $email, password: $password) {\n      uid\n      name\n    }\n  }\n`\n","import CheckBox from 'grommet/components/CheckBox'\n\nimport { connectField } from '../lib/utils'\n\nexport default connectField(CheckBox)\n","import { compose, renameProp } from 'recompose'\nimport TextInput from 'grommet/components/TextInput'\n\nimport { connectField } from '../lib/utils'\n\nexport default compose(\n  connectField,\n  renameProp('onChange', 'onDOMChange')\n)(TextInput)\n","import { mapProps } from 'recompose'\n\n/**\n * Normalize react-final-form props to custom field component.\n */\nexport const connectField = mapProps(({ input, meta, ...props }) => ({  meta, ...input, ...props }))\n","/**\n * This file overrides the default require('process') to inject\n * environment variables when available.\n */\n\nimport objectPath from 'object-path'\n\nif (process.browser && window.envConfig) {\n  Object.keys(window.envConfig).forEach(path => {\n    objectPath.set({ process }, path, window.envConfig[path])\n  })\n}\n\nexport default process\n","module.exports = require(\"apollo-cache-inmemory\");","module.exports = require(\"apollo-client\");","module.exports = require(\"apollo-link-http\");","module.exports = require(\"conducer\");","module.exports = require(\"core-js/library/fn/array/is-array\");","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/symbol/to-primitive\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"grommet/components/App\");","module.exports = require(\"grommet/components/Box\");","module.exports = require(\"grommet/components/Button\");","module.exports = require(\"grommet/components/CheckBox\");","module.exports = require(\"grommet/components/Footer\");","module.exports = require(\"grommet/components/Form\");","module.exports = require(\"grommet/components/FormField\");","module.exports = require(\"grommet/components/Heading\");","module.exports = require(\"grommet/components/Headline\");","module.exports = require(\"grommet/components/Image\");","module.exports = require(\"grommet/components/TextInput\");","module.exports = require(\"grommet/components/icons/base/Chat\");","module.exports = require(\"isomorphic-fetch\");","module.exports = require(\"next/head\");","module.exports = require(\"next/router\");","module.exports = require(\"object-path\");","module.exports = require(\"prop-types\");","module.exports = require(\"ramda\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"react-final-form\");","module.exports = require(\"recompose\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxFA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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":""}